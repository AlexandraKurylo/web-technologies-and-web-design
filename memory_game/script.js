const GAME_NODE = document.querySelector("#game-board");
const WINNING_TEXT = document.querySelector("#victory-message");
const START_GAME_BUTTON = document.querySelector("#new-game-button");

const VISIBLE_CARD_CLASSNAME = "visible";
const CARD_FLIP_TIMEOUT_MS = 500;

const CARD_ELEMENTS = ["üçí", "üçë", "üçé", "üçã‚Äçüü©", "üçê", "üçç"];
const CARDS_AMOUNT = 12;

let VISIBLE_CARDS = [];

START_GAME_BUTTON.addEventListener("click", startGame);

function startGame() {
  // –û—á–∏—â–∞—î–º–æ —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ
  [GAME_NODE, WINNING_TEXT].forEach((element) => (element.innerHTML = ""));

  const CARD_VALUES = generateArrayWithPairs(CARD_ELEMENTS, CARDS_AMOUNT);

  CARD_VALUES.forEach(renderCard);

  const renderedCards = document.querySelectorAll(".card");

  renderedCards.forEach((card) => card.classList.add(VISIBLE_CARD_CLASSNAME));

  setTimeout(() => {
    renderedCards.forEach((card) =>
      card.classList.remove(VISIBLE_CARD_CLASSNAME)
    );
  }, CARD_FLIP_TIMEOUT_MS * 2);
}

function generateArrayWithPairs(arr, fieldSize) {
  if (arr.length * 2 !== fieldSize) {
    const errorMessage =
      "–ù–µ–º–æ–∂–ª–∏–≤–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ –∑ –ø–∞—Ä–∞–º–∏ —ñ–∑ –∑–∞–∑–Ω–∞—á–µ–Ω–æ–≥–æ –º–∞—Å–∏–≤—É —Ç–∞ —Ä–æ–∑–º—ñ—Ä—É.";

    console.error(errorMessage);
    return null;
  }

  const randomArray = [];
  const elementCounts = {};

  for (const item of arr) {
    elementCounts[item] = 0;
  }

  while (randomArray.length < fieldSize) {
    const randomIndex = Math.floor(Math.random() * arr.length);
    const randomElement = arr[randomIndex];

    if (elementCounts[randomElement] < 2) {
      randomArray.push(randomElement);
      elementCounts[randomElement]++;
    }
  }

  return randomArray;
}

function renderCard(cardText = "") {
  const card = document.createElement("div");
  card.classList.add("card");

  const cardInner = document.createElement("div");
  cardInner.classList.add("card-inner");

  const cardFront = document.createElement("div");
  cardFront.classList.add("card-front");

  const cardBack = document.createElement("div");
  cardBack.classList.add("card-back");

  cardFront.textContent = "?";
  cardBack.textContent = cardText;

  cardInner.appendChild(cardFront);
  cardInner.appendChild(cardBack);

  card.appendChild(cardInner);

  card.addEventListener("click", handleCardClick.bind(this, card));

  GAME_NODE.appendChild(card);
}

function handleCardClick(card) {
  // –ù–µ —Ä–µ–∞–≥—É—î–º–æ –Ω–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç—É –∫–∞—Ä—Ç–∫—É
  if (card.classList.contains(VISIBLE_CARD_CLASSNAME)) {
    return;
  }

  // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–≥—Ä–∞—à—É
  const checkVictory = () => {
    const visibleCardsNodes = document.querySelectorAll(
      `.${VISIBLE_CARD_CLASSNAME}`
    );

    // –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö –∫–∞—Ä—Ç –¥–æ—Ä—ñ–≤–Ω—é—î –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–∞—Ä—Ç, —Ç–æ —Ü–µ –ø–µ—Ä–µ–º–æ–≥–∞

    const isVictory = visibleCardsNodes.length === CARDS_AMOUNT;
    const victoryMessage = "Congratulations, you won!";

    if (isVictory) {
      WINNING_TEXT.textContent = victoryMessage;
    }
  };

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞ –≤–∏–≥—Ä–∞—à –ø—ñ—Å–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–∞—Ä—Ç–∫–∏
  card
    .querySelector(".card-inner")
    .addEventListener("transitionend", checkVictory);

  // –î–æ–¥–∞—î–º–æ –∫–∞—Ä—Ç—ñ –∫–ª–∞—Å visible, –∑–∞–ø—É—Å–∫–∞—é—á–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø–æ–≤–æ—Ä–æ—Ç—É
  card.classList.add(VISIBLE_CARD_CLASSNAME);

  // –î–æ–¥–∞—î–º–æ –∫–∞—Ä—Ç–∫—É –¥–æ –º–∞—Å–∏–≤—É –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö –∫–∞—Ä—Ç
  VISIBLE_CARDS.push(card);

  // –¢–∞–∫ —è–∫ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –∫–æ–∂–Ω—ñ 2 –≤—ñ–¥–∫—Ä–∏—Ç—ñ –∫–∞—Ä—Ç–∏, —Ä–æ–±–∏–º–æ —Ç–∞–∫—É —É–º–æ–≤—É
  if (VISIBLE_CARDS.length % 2 !== 0) {
    return;
  }

  // –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—é —Ç–∞ –ø–µ—Ä–µ–¥–æ—Å—Ç–∞–Ω–Ω—é –≤—ñ–¥–∫—Ä–∏—Ç—ñ –∫–∞—Ä—Ç–∏, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —á–∏ –∑–±—ñ–≥–∞—é—Ç—å—Å—è –≤–æ–Ω–∏
  const [prelastCard, lastCard] = VISIBLE_CARDS.slice(-2);

  // –Ø–∫—â–æ –¥–≤—ñ –æ—Å—Ç–∞–Ω–Ω—ñ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –∫–∞—Ä—Ç–∏ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è, –ø—Ä–∏–±–∏—Ä–∞—î–º–æ —ó—Ö —ñ–∑ –º–∞—Å–∏–≤—É –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö –∫–∞—Ä—Ç
  if (lastCard.textContent !== prelastCard.textContent) {
    VISIBLE_CARDS = VISIBLE_CARDS.slice(0, VISIBLE_CARDS.length - 2);

    // –ß–µ—Ä–µ–∑ 500 –º—Å –∑–∞–∫—Ä–∏–≤–∞—î–º–æ —Ç—ñ –∫–∞—Ä—Ç–∏, —è–∫—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–ª–∏
    setTimeout(() => {
      [lastCard, prelastCard].forEach((card) =>
        card.classList.remove(VISIBLE_CARD_CLASSNAME)
      );
    }, CARD_FLIP_TIMEOUT_MS);
  }
}

startGame();
